8 Лабораторная работа 2 часть 13 задание
13. Записать в файл N натуральных случайных чисел a1,a2,a3,…,an. Сформировать новый файл, элементами которого 
являются числа а1, а1+а2, а1+а2+а3,..., a1+a2+a3+...+an.
//====================================================================================================
#include <stdio.h> /// Стандартная библиотека ввода-вывода
#include <stdlib.h> /// Стандартная библиотека
#include <time.h> /// Библиотека для работы со временем
#include <windows.h> /// Библиотека для работы с системными функциями

int main ()
{
    system("chcp 1251"); /// Локализуем русский язык
    srand(time(NULL)); /// Ключ для рандомайзера
    FILE *inputFile; /// Переменная типа файл
    FILE *outputFile; /// Переменная типа файл
    int *outputArrayRandomNumber = NULL; /// Ссылка на выходной массив рандомных чисел
    int lengthOutputArrayRandomNumber; /// Длина выходного массива рандомных чисел
    int *inputArrayRandomNumber = NULL; /// Ссылка на входной массив рандомных чисел
    int numberByte = 0; /// Переменная для определения количества байт занимаемые файлом
    int sum = 0; /// Переменная сумма
    printf("Введите количестиво рандомных чисел: ");
    scanf("%d", &lengthOutputArrayRandomNumber);
    outputArrayRandomNumber = (int*)malloc(lengthOutputArrayRandomNumber * sizeof(int)); /// Выделяем динамическую память для массива типа int
    //==================================================
    /// Заполняем динамический массив рандомными числами
    for (int i = 0; i < lengthOutputArrayRandomNumber; i++)
    {
        outputArrayRandomNumber[i] = rand () % 9 + 1; /// Присваиваем элементу массива под индексом i рандомное значение
    }
    //==================================================
    /// Открываем бинарный файл для записи рандомных чисел
    inputFile = fopen ("inputFile.dat", "wb"); /// Открываем бинарный файл для записи
    if (inputFile == NULL)
    {
        printf ("Ошибка открытия файла\n");
    }
    else
    {
        fwrite (outputArrayRandomNumber, sizeof(int), lengthOutputArrayRandomNumber, inputFile);
        fclose(inputFile); /// Закрываем файл
    }
    //==================================================
    /// Выводим в консоль записанный в файл массив
    printf ("\nРандомные числа записанные в inputFile файл: ");
    for (int i = 0; i < lengthOutputArrayRandomNumber; i++)
    {
        printf("%d ", outputArrayRandomNumber[i]);
    }
    printf("\n\n"); /// Пропускаем 2 строки
    //==================================================
    free (outputArrayRandomNumber); /// Освобождаем динамическую память
    outputArrayRandomNumber = NULL; /// Обнуляем ссылку
    //==================================================
    /// Открываем файл для определения количества байт занимаемые файлом
    inputFile = fopen ("inputFile.dat", "rb"); /// Открываем бинарный файл для чтения
    if (inputFile == NULL)
    {
        printf ("Ошибка открытия файла\n");
    }
    else
    {
        while (getc(inputFile) != EOF) /// Выполнять пока не конец файла (EOF). getc - чтение одного байта из указанного потока данных.
        {
            numberByte++;
        }
        fclose(inputFile); /// Закрываем файл
    }
    inputArrayRandomNumber = (int*)malloc(numberByte); /// Выделяем динамическую память для массива
    outputArrayRandomNumber = (int*)malloc(numberByte); /// Выделяем динамическую память для массива
    //==================================================
    /// Открываем файл для записи данных из файла в массив
    inputFile = fopen ("inputFile.dat", "rb");
    if (inputFile == NULL)
    {
        printf("Ошибка открытия файла\n");
    }
    else
    {
        fread(inputArrayRandomNumber, sizeof(int), numberByte / sizeof(int), inputFile);
        fclose(inputFile); /// Закрываем файл
    }
    //==================================================
    /// Выводим в консоль рандомные числа
    printf ("Рандомные числа прочтёные из inputFile файла: ");
    for (int i = 0; i < numberByte / sizeof(inputArrayRandomNumber[0]); i++)
    {
        printf("%d ", inputArrayRandomNumber[i]);
    }
    printf ("\n");
    //==================================================
    /// Заполняем выходной массив
    for (int i = 0; i < numberByte / sizeof(inputArrayRandomNumber[0]); i++)
    {
        sum += inputArrayRandomNumber[i];
        outputArrayRandomNumber[i] = sum;
    }
    //==================================================
    /// Открываем бинарный файл для записи чисел
    outputFile = fopen ("outputFile.dat", "wb"); /// Открываем бинарный файл для записи
    if (outputFile == NULL)
    {
        printf ("Ошибка открытия файла\n");
    }
    else
    {
        fwrite (outputArrayRandomNumber, sizeof(int), numberByte / sizeof(inputArrayRandomNumber[0]), outputFile);
        fclose(outputFile); /// Закрываем файл
    }
    //==================================================
    /// Выводим в консоль рандомные числа записанные в файл
    printf ("\nРандомные числа записанные в outputFile файл: ");
    for (int i = 0; i < numberByte / sizeof(outputArrayRandomNumber[0]); i++)
    {
        printf("%d ", outputArrayRandomNumber[i]);
    }
    printf ("\n");
    //==================================================
    free (inputArrayRandomNumber); /// Освобождаем динамическую память
    inputArrayRandomNumber = NULL; /// Обнуляем ссылку
    //==================================================
    free (outputArrayRandomNumber); /// Освобождаем динамическую память
    outputArrayRandomNumber = NULL; /// Обнуляем ссылку
    //==================================================
    /// Открываем файл для определения количества байт занимаемые файлом
    numberByte = 0; /// Обнуляем переменную (количество байт)
    outputFile = fopen ("outputFile.dat", "rb"); /// Открываем бинарный файл для чтения
    if (inputFile == NULL)
    {
        printf ("Ошибка открытия файла\n");
    }
    else
    {
        while (getc(outputFile) != EOF) /// Выполнять пока не конец файла (EOF). getc - чтение одного байта из указанного потока данных.
        {
            numberByte++;
        }
        fclose(outputFile); /// Закрываем файл
    }
    inputArrayRandomNumber = (int*)malloc(numberByte); /// Выделяем динамическую память для массива
    //==================================================
    /// Открываем файл для записи данных из файла в массив
    outputFile = fopen ("outputFile.dat", "rb");
    if (outputFile == NULL)
    {
        printf("Ошибка открытия файла\n");
    }
    else
    {
        fread(inputArrayRandomNumber, sizeof(int), numberByte / sizeof(int), outputFile);
        fclose(outputFile); /// Закрываем файл
    }
    //==================================================
    /// Выводим в консоль рандомные числа
    printf ("\nРандомные числа прочтёные из outputFile файла: ");
    for (int i = 0; i < numberByte / sizeof(inputArrayRandomNumber[0]); i++)
    {
        printf("%d ", inputArrayRandomNumber[i]);
    }
    printf ("\n");
    //==================================================
    free (inputArrayRandomNumber); /// Освобождаем динамическую память
    inputArrayRandomNumber = NULL; /// Обнуляем ссылку
    //==================================================
    return 0;
}
//====================================================================================================