6 Лабораторная работа. 2 часть 3 задание
3. Дана строка (слова разделены пробелами). Вывести на экран слово, в котором найдено искомое (вводится с клавиатуры) 
буквосочетание.
//====================================================================================================
#include <stdio.h> /// Стандартная библиотека Си ввода-вывода
#include <windows.h> /// Библиотека для работы с системными функциями

/// Функция для заполнения строки тернирующими нулями. Функция для обнуление строки.
void fillStringTZero (char *inputString, int lengthString)
{
    for (int i = 0; i < lengthString; i++)
    {
        inputString[i] = '\0';
    }
}

void printWord (char *str, char *letters)
{
    char variableWord[30]; /// Переменное слово
    fillStringTZero (variableWord, 30); /// Обнуляем переменную строку
    int indexForVariableWord = 0; /// Индекс для переменного слова
    int indexForLetters = 0; /// Индекс для переменной буквосочетание
    int booleanFoVrariableWord; /// Булевая переменная для переменного слова (0 - false, 1 - true)
    int lengthStr = 0; /// Длинна строки str (количество символов в строке)
    int boleanForNoWord = 1; /// Переменная для вывода сообщения в консоль "Нет слов с этим буквосочетанием"
    /// Пробегаемся по строке str, чтобы узнать есть в конце пробел или нет
    for (int i = 0; str[i] != '\0'; i++)
    {
        lengthStr++; /// Инкриментим переменную длинна строки str
    }
    if (str[lengthStr - 1] != ' ') /// Если в конце строки нет пробела
        str[lengthStr] = ' '; /// Добавить пробел в конец строки
    /// Пробегаемся по строке str
    for (int i = 0; str[i] != '\0'; i++) /// Пока не конец строки выполнять. '\0' - Тернирующий ноль (Означает конец строки)
    {
        if (str[i] == ' ') /// Если элемент строки под индексом i равен пробелу
        {
            for (int j = 0; variableWord[j] != '\0'; j++) /// Пробегаемся по переменному слову
            {
                if (variableWord[j] == letters[0])
                {
                    booleanFoVrariableWord = 1; /// True
                    for (int k = j; letters[indexForLetters] != '\0'; k++) /// Пробегаемся по буквосочетанию
                    {
                        if (letters[indexForLetters] != variableWord[k])
                        {
                            booleanFoVrariableWord = 0; /// False
                            break; /// Выходим из цикла (k)
                        }
                        indexForLetters++; /// Инкрементим индекс для переменной буквосочетание. (Увеличиваем значение переменной на 1)
                    }
                    if (booleanFoVrariableWord == 1)
                    {
                        printf ("%s ", variableWord);
                        boleanForNoWord = 0; /// false
                    }
                }
            }
            fillStringTZero (variableWord, 30); /// Обнуляем переменную строку
            indexForVariableWord = 0; /// Обнуляем индекс для переменного слова
            indexForLetters = 0; /// Обнуляем индекс для переменной буквосочетание
        }
        else /// Иначе
        {
            variableWord[indexForVariableWord] = str[i];
            indexForVariableWord++; /// Инкрементим индекс для переменного слова. (Увеличиваем значение переменной на 1)
        }
    }
    if (boleanForNoWord == 1)
        printf ("Нет слов с этим буквосочетанием");
}

int main()
{
    system ("chcp 1251"); /// Устанавливаем кодовую страницу 1251 (Локализуем русский язык) (Устанавливаем кодировку windows-1251)
    char str[100]; /// Переменная строка на 100 элементов
    char letters[10]; /// Буквосочетание
    printf ("Введите строку: ");
    gets (str); /// Функция gets считывает символы из стандартного потока ввода до символа новой строки n
    printf ("Введите буквосочетание: ");
    gets (letters); /// Функция gets считывает символы из стандартного потока ввода до символа новой строки n
    printWord (str, letters);
    return 0;
}
//====================================================================================================